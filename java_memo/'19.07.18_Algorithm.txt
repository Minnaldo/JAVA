작업량 : 얼마나 적은 연산으로 원하는 결과를 얻어내는가   [시간복잡도]
메모리 사용량 : 얼마나 적은 메모리를 사용하는가             [공간복잡도]

-일반적 : 시간복잡도 오르면, 공간복잡도 내려간다.

[시간복잡도]
-알고리즘의 작업량을 표현할 때 시간복잡도로 표현한다.
-Time Complexity
-실제 걸리는 시간을 측정		[실행환경에 따라 상대적임]
-실행되는 명령문의 개수를 계산.
-n에 따라
***빅-오(O) 표기법
-시간 복잡도 함수 중에서 가장 큰 영향력을 주는 n에 대한 항만을 표시.
-O(1), O(logn), O(n), O(nlogn), O(N^2), O(2^n), O(n!)
-O(N^2) : 선택정렬, 버블정렬		-> 10,000~50,000 정도
-O(2^n) : 부분집합			-> 20 정도까지는 수월, 100이면 아님.
-O(n!) 순열   			-> 12! 이상 넘어가면 어려워짐.

*햄버거 다이어트 문제
: 제로원? 문제

==============================================
*배열
ex1) int num0; int num1; int num2; int num3; int num4; ...
ex2) int num[] = new int[8]
배열[ex2)]의 장점
-연속된 메모리 할당. (접근하기 유리하다.)



*클래스 란?
-관련있는 변수와 함수를 묶어 만든 사용자 정의 자료형.


사람			묶음도장 : 사람 {
 -이름 : 홍승길		String name;
 -나이 : 23		int age;
			}

C언어에서는 구조체로 변수를 넣어서 사용할 수 있는데,
자바에서는 클래스로 묶어서 변수와 함수를 묶어서 만들어 사용 가능하다.

*Person p;				=>Stack 에 만들어짐.
자바에서는 오로지 new로만 생성이 가능함.
new Person();			=>Scanner로 Heap영역에 있는 애들 위치를 잡아줌.

*메모리 동적 할당,,
정적 : 컴파일 전에 이미 결정.
동적 : 실행하고 나서 결정.
[동적 할당 => Heap 영역]

==================================================
[정렬]
*2개 이상의 자료를 특정 기준에 의해 작은 값부터 큰 값 (오름차순:ascending)
 혹은 그 반대의 순서대로(내림차순: descending) 재배열하는 것

-버블 정렬 (Bubble Sort)
-카운팅 정렬 (Counting Sort)
-선택 정렬 (Selection Sort)
-퀵 정렬 (Quick Sort)
-삽입 정렬 (Insertion Sort)
-병합 정렬 (Merge Sort)
