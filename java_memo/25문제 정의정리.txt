1. 자바 ++ -- 차이점
증감 연산자 로써 앞에 붙느냐 or 뒤에 붙는냐에 따라 동작의 순서가 달라진다.

2.call by value (값에 의한 호출)
메소드로 인자값을 보낼때 그 값을 복사하여 넘기는형태
메소드 내에서는 복사된 값으로 작업을 하기 때문에 원래의값을 변경시키지 않는다.
--메소드 안에서 두 수의 위치를바꿔도 원본데이터가 바뀌는것은 아니다.
--객체 또한 메소드로 값이 전달 될 때 참조값은 call by value 값으로 전달된다.
2-1)  call by reference 참조에의한 호출)
인자값을 메소드로 넘겨줄 때 그 객체를 참조하는 주소를 넘겨주는 형태이다.
메소드 내에서도 원래의 값에 접근이 가능하다.
--객체의참조값을 직접바꾼것이 아니라 객체의 참조값을 통해서 멤버변수에 값을 바꿧다.소ㅑㄴ

3. this
클래스의 멤버변수와 생정자에게서 받는 매개변수를 구분하는 역할을 한다.
this.멤버변수/ this.멤버함수/ this() 생성자를 호출한다
-- static 메서드에서는 사용할 수 없다.
--this() 생성자를 호출하는 메서드 생성자안에서만 사용

4.access modifier (접근제어자)
private, public, protected default
private 변수,메소드 해당 클래스에서만 접근가능
default 해당 패키지내에서만 접근가능하다
protected 변수, 메소드 동일패키지 또는 클래스 등 외부패키지의 클래스에서 접근가능
public 변수, 메소드는 어떤 클래스에서 접근 가능하다

5.생성자 
new연산자와 같이 사용되어 클래스로부터 객체를 생성 할 때 호출되어 객체의 초기화담당
인스턴스 생성시에 실행 되어야 할 작업을 위해서도 사용된다

6. 다형성(폴리머피즘)
같은 자료형에 여러가지 객체를 대입하여 다양한 결과를얻어내는 성질
대표적으로 오버로딩/ 오버라이딩이있다.

7. instanceof 객체타입을 확인하는데 사용한다.
주로 상속관계에서 부모객체인지 자식객체인지 확인 하는데 사용한다. !!!이문장!!!

8. for each문 for(변수타입 변수이름:배열이름)
오직 배열의 값을 사용할 수만 있고 있고(read) 수정할 수 없다는것입니다.

9. 추상클래스로 폴리모피즘 구현/ 인터페이스 폴리머피즘 / 메소드 오버로딩/ 메소드 오버라이딩
10.access modifier 한 문제더 나온다

10 access modifier 
접근제어자를 사용하는 이유는 클래스의 데이터를 보호하기 위해서!
객체지향개념에서는 캡슐화 (encapsulation) 이라 한다.

11. 상속 , 다형성
상속선언 extends 상위클래스
자바는 다중 상속 허용하지 않음
상속을 받은 객체를 생서 시 상위객체가 먼저 생성되고 하위객체가 생성된다.

12. class설계기본 - 상속 
클래스에 기능을 추가하거나 재정의하여 새로운 클래스를 정의하는것
캡슐화 .추상화 특징을 가지고있다.

13.형변환 
형변환은 물을 큰그릇과 작은그릇사이에서 옮길때를 생각하면 쉽다.

byte - short,char - int - long - float - double
1         2          4      8       4         8
강제형변환 (명시적형변환)

변수 또는 리터럴의 타입을 다른 타입으로 변환하는것이다.

14. 객체생성. 다형성
여러가지 형태를 가질 수 있는 능력 / 한 타입의 참조변수로 여러 타입의 객체를 
참조할 수 있도록함
2. 다형성은 하나의 객체를 여러가지 타입으로 선언가능하다
3. 자바에서 다형성은 상속과 인터페이스를 통해 이루어진다
4. 인터페이스가 상속보다 다형성에 유연함을 더 제공한다.

15. overloading / overriding
자바에서는 다형성을 지원하는 방법으로 
메소드 오버로딩/오버라이딩이 있다.

오버로딩: 같은 이름의 메소드를 여러개 가지면서 매개변수의 
유형과 개수가 다르도록 하는 기술

오버라이딩: 상위 클래스가 가지고 있는 메소드를 하위클래스가 
재정의 해서 상요하다.

16.17
정수타입 
byte - short - int - long - char 
(    ---  -0-  --- )     0L   \ U0000

실수타입 float double 
            0.0f     0.0
논리타입 boolean false( default 값)
String 포함 클래스/ 배열/ 인터페이스 null
지역변수는 초기화 안하면 exception(예외)가 발생한다

18.상속과 생성자 호출 (스태틱은 바로 생성되서 선언 따로) public은 객체를 선언해야 사용할수있다
생성자는 객체를 생성 할 때 실행되는 부분입니다
Dog d = new Dog();
생성자는 리턴유형이 없습니다.
생성자는 생성자 오버로딩을 이용해 여러개 만들 수 있습니다.

20. break 문
제어문의 제어를 벗어나기 위해 사용한다
제어문에서 break문을 만나면 코드를 강제적으로 종료하거나 가장 가까운 제어문탈출

20-1) continue 문
break문과 반대로 멈추지 않고 실행을 한다.
continue문은 다음 문장을 수행 하지 않고 다시 제어문의 처음으로 돌아간다.

21. switch 문 조건문
22.생성자
23.접근제어자 accessmodifier
24. toString()
toString 메서드는 객체가 가지고 있는 정보나 값들을 문자열로 만들어 리턴하는 메소드입니다.
toString 자동으로 호출된다.
Integer.toString() 함수를 쓰는이유
Number 객체의 값을 String객체로 변환하는 함수입니다.
