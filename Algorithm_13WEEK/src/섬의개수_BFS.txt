
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);

		while (true) {

			int r = sc.nextInt();
			int c = sc.nextInt();

			if (r == 0 && c == 0)
				break;
			
			int[][] arr = new int[c][r];

			for (int i = 0; i < c; i++) {
				for (int j = 0; j < r; j++) {
					arr[i][j] = sc.nextInt();
				}
			}

			/*for (int i = 0; i < c; i++)
				System.out.println(Arrays.toString(arr[i]));
*/
			////////////
			int cnt = 0;

			Queue<Node> q = new LinkedList<>();
			for (int i = 0; i < c; i++) {
				for (int j = 0; j < r; j++) {
					if (arr[i][j] == 1) {
						boolean[][] che = new boolean[c][r];
						cnt++;
						q.add(new Node(i, j));
						arr[i][j] = 0;
						che[i][j] = true;
						while (!q.isEmpty()) {
							Node node = q.poll();
							for (int k = 0; k < 8; k++) {
								int nr = node.r + dr[k];
								int nc = node.c + dc[k];
								if (nr >= 0 && nc >= 0 && nr < c && nc < r && che[nr][nc] == false
										&& arr[nr][nc] == 1) {
									q.add(new Node(nr, nc));
									arr[nr][nc] = 0;
									che[nr][nc] = true;
								}
							}
						}
					}
				}
			}

			System.out.println(cnt);
		}
	}

	static int[] dr = { -1, 1, 0, 0, -1, -1, 1, 1 };
	static int[] dc = { 0, 0, -1, 1, -1, 1, -1, 1 };

	static class Node {
		int r, c;

		Node(int r, int c) {
			this.r = r;
			this.c = c;
		}
	}

}
