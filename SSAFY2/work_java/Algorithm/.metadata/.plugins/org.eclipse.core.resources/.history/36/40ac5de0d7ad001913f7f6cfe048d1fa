package Algorithm_2WEEK;

public class 비트마스크부분집합 {
	public static void main(String[] args) {
		//사과,오렌지,배  를 모든 경우의 수로 뽑아봅시다.
		String[] fruits = {"사과  ", "오렌지  ", "귤  "};
		
		//원소가 3개니까 8가지의 방법이 있음.
		//(1 << 3)  -> 비트연산자에서  0001에서 3번 땡겨서 1000 이라,,
		for(int i = 0; i < (1 << 3); i++)
		{
			
			for(int j = 0; j < 3; j++)
			{
				if( ( (1 << j) & i ) != 0 )
					System.out.println(fruits[j]);
			}
			
			
			/*//0~7로 변하는 i를 검사해서
			//맨 오른쪽 첫 번째 비트가 1이면 사과 포함
			/*   맨 오른쪽 첫번째 비트가 1인지 검사하려면,, 맨 오른쪽 한 비트가 1인.   1이라는 숫자와 & 연산을 해봐서 0이면 ㄴㄴ 아니면 ㅇㅇ*/
			if( (1 & i) != 0)	// if( ( (1 << 0) & i) != 0 )
				System.out.print(fruits[0]);
			//맨 오른쪽 두 번째 비트가 1이면 오렌지 포함
			/*   맨 오른쪽 두번째 비트가 1이닞 검사하려면,, 맨 오른쪽 두번쨰의 비트만 1인.  2와 & 연산.*/
			if( (2 & i) != 0)	// if( ( (1 << 1) & i) != 0 )
				System.out.print(fruits[1]);
			//맨 오른쪽 세 번째 비트가 2이면 배 포함.
			 /*   맨 오른쪽 세번쨰 비트가 1인지 검사하려면,, 맨 오른쪽 세번쨰의 비트만 1인.  4와 & 연산. */
			if( (4 & i) != 0)	// if( ( (1 << 2) & i) != 0 )
				System.out.print(fruits[2]);
			 /*   저놈은 1<<2  */
			 * 
			 * 
			 */
			
		
			
				 

			System.out.println();
			
			
			
		}
	}
	
}
